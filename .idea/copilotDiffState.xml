<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/app/api/og/route.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/api/og/route.tsx" />
              <option name="originalContent" value="import { ImageResponse } from &quot;next/og&quot;;&#10;import { NextRequest } from &quot;next/server&quot;;&#10;&#10;export const runtime = &quot;edge&quot;;&#10;&#10;export async function GET(request: NextRequest) {&#10;  try {&#10;    const { searchParams } = new URL(request.url);&#10;    const title = searchParams.get(&quot;title&quot;) || &quot;the beauty of earth.&quot;;&#10;    const imageParam = searchParams.get(&quot;image&quot;);&#10;&#10;    // Use the first gallery image as default background&#10;    const baseUrl = process.env.VERCEL_URL&#10;      ? `https://${process.env.VERCEL_URL}`&#10;      : request.url.includes(&quot;localhost&quot;)&#10;        ? &quot;http://localhost:3000&quot;&#10;        : &quot;https://images.jomaendle.com&quot;;&#10;&#10;    const backgroundImage = imageParam || `${baseUrl}/_next/static/media/0.jpg`;&#10;&#10;    return new ImageResponse(&#10;      (&#10;        &lt;div&#10;          style={{&#10;            height: &quot;100%&quot;,&#10;            width: &quot;100%&quot;,&#10;            display: &quot;flex&quot;,&#10;            flexDirection: &quot;column&quot;,&#10;            alignItems: &quot;center&quot;,&#10;            justifyContent: &quot;center&quot;,&#10;            backgroundColor: &quot;#000&quot;,&#10;            backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.7)), url(${backgroundImage})`,&#10;            backgroundSize: &quot;cover&quot;,&#10;            backgroundPosition: &quot;center&quot;,&#10;            fontFamily: &quot;system-ui, sans-serif&quot;,&#10;          }}&#10;        &gt;&#10;          &lt;div&#10;            style={{&#10;              display: &quot;flex&quot;,&#10;              flexDirection: &quot;column&quot;,&#10;              alignItems: &quot;center&quot;,&#10;              justifyContent: &quot;flex-start&quot;,&#10;              padding: &quot;60px&quot;,&#10;              textAlign: &quot;start&quot;,&#10;              backgroundColor: &quot;rgba(0, 0, 0, 0.4)&quot;,&#10;              borderRadius: &quot;32px&quot;,&#10;              border: &quot;2px solid rgba(255, 255, 255, 0.2)&quot;,&#10;              maxWidth: &quot;900px&quot;,&#10;              margin: &quot;0 40px&quot;,&#10;              backdropFilter: &quot;blur(20px)&quot;,&#10;              boxShadow: &quot;0 32px 64px rgba(0, 0, 0, 0.3)&quot;,&#10;            }}&#10;          &gt;&#10;            &lt;h1&#10;              style={{&#10;                fontSize: &quot;96px&quot;,&#10;                fontWeight: &quot;800&quot;,&#10;                color: &quot;white&quot;,&#10;                lineHeight: &quot;0.9&quot;,&#10;                margin: &quot;0 0 32px 0&quot;,&#10;                textShadow: &quot;4px 4px 8px rgba(0, 0, 0, 0.8)&quot;,&#10;                letterSpacing: &quot;-4px&quot;,&#10;              }}&#10;            &gt;&#10;              {title}&#10;            &lt;/h1&gt;&#10;            &lt;p&#10;              style={{&#10;                fontSize: &quot;24px&quot;,&#10;                color: &quot;rgba(255, 255, 255, 0.95)&quot;,&#10;                margin: &quot;0&quot;,&#10;                fontWeight: &quot;500&quot;,&#10;                textShadow: &quot;2px 2px 4px rgba(0, 0, 0, 0.8)&quot;,&#10;                lineHeight: &quot;1.2&quot;,&#10;              }}&#10;            &gt;&#10;              Images from around the world&#10;            &lt;/p&gt;&#10;            &lt;p&#10;              style={{&#10;                fontSize: &quot;24px&quot;,&#10;                color: &quot;rgba(255, 255, 255, 0.9)&quot;,&#10;                margin: &quot;16px 0 0 0&quot;,&#10;                fontWeight: &quot;400&quot;,&#10;                textShadow: &quot;2px 2px 4px rgba(0, 0, 0, 0.8)&quot;,&#10;              }}&#10;            &gt;&#10;              Explore the beauty of our planet &#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      ),&#10;      {&#10;        width: 1200,&#10;        height: 630,&#10;      },&#10;    );&#10;  } catch (e: any) {&#10;    console.log(`${e.message}`);&#10;    return new Response(`Failed to generate the image`, {&#10;      status: 500,&#10;    });&#10;  }&#10;}&#10;" />
              <option name="updatedContent" value="import { ImageResponse } from &quot;next/og&quot;;&#10;import { NextRequest } from &quot;next/server&quot;;&#10;&#10;export const runtime = &quot;edge&quot;;&#10;&#10;export async function GET(request: NextRequest) {&#10;  try {&#10;    const { searchParams } = new URL(request.url);&#10;    const title = searchParams.get(&quot;title&quot;) || &quot;the beauty of earth.&quot;;&#10;    const imageParam = searchParams.get(&quot;image&quot;);&#10;&#10;    // For OG images, we need to use absolute URLs that are accessible externally&#10;    // Since we can't easily access the static imports in the edge runtime,&#10;    // we'll use a fallback approach or specify images manually&#10;    const baseUrl = process.env.VERCEL_URL&#10;      ? `https://${process.env.VERCEL_URL}`&#10;      : request.url.includes(&quot;localhost&quot;)&#10;        ? &quot;http://localhost:3000&quot;&#10;        : &quot;https://images.jomaendle.com&quot;;&#10;&#10;    // Use an external image or a simple gradient background since static imports&#10;    // don't work well in OG image generation&#10;    const backgroundImage = imageParam || null;&#10;&#10;    return new ImageResponse(&#10;      (&#10;        &lt;div&#10;          style={{&#10;            height: &quot;100%&quot;,&#10;            width: &quot;100%&quot;,&#10;            display: &quot;flex&quot;,&#10;            flexDirection: &quot;column&quot;,&#10;            alignItems: &quot;center&quot;,&#10;            justifyContent: &quot;center&quot;,&#10;            backgroundColor: &quot;#000&quot;,&#10;            backgroundImage: backgroundImage &#10;              ? `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.7)), url(${backgroundImage})`&#10;              : &quot;linear-gradient(135deg, #1e3a8a 0%, #3730a3 25%, #581c87 50%, #7c2d12 75%, #dc2626 100%)&quot;,&#10;            backgroundSize: &quot;cover&quot;,&#10;            backgroundPosition: &quot;center&quot;,&#10;            fontFamily: &quot;system-ui, sans-serif&quot;,&#10;          }}&#10;        &gt;&#10;          &lt;div&#10;            style={{&#10;              display: &quot;flex&quot;,&#10;              flexDirection: &quot;column&quot;,&#10;              alignItems: &quot;center&quot;,&#10;              justifyContent: &quot;center&quot;,&#10;              padding: &quot;60px&quot;,&#10;              textAlign: &quot;center&quot;,&#10;              backgroundColor: &quot;rgba(0, 0, 0, 0.4)&quot;,&#10;              borderRadius: &quot;32px&quot;,&#10;              border: &quot;2px solid rgba(255, 255, 255, 0.2)&quot;,&#10;              maxWidth: &quot;900px&quot;,&#10;              margin: &quot;0 40px&quot;,&#10;              backdropFilter: &quot;blur(20px)&quot;,&#10;              boxShadow: &quot;0 32px 64px rgba(0, 0, 0, 0.3)&quot;,&#10;            }}&#10;          &gt;&#10;            &lt;h1&#10;              style={{&#10;                fontSize: &quot;80px&quot;,&#10;                fontWeight: &quot;800&quot;,&#10;                color: &quot;white&quot;,&#10;                lineHeight: &quot;0.9&quot;,&#10;                margin: &quot;0 0 32px 0&quot;,&#10;                textShadow: &quot;4px 4px 8px rgba(0, 0, 0, 0.8)&quot;,&#10;                letterSpacing: &quot;-2px&quot;,&#10;              }}&#10;            &gt;&#10;              {title}&#10;            &lt;/h1&gt;&#10;            &lt;p&#10;              style={{&#10;                fontSize: &quot;36px&quot;,&#10;                color: &quot;rgba(255, 255, 255, 0.95)&quot;,&#10;                margin: &quot;0&quot;,&#10;                fontWeight: &quot;500&quot;,&#10;                textShadow: &quot;2px 2px 4px rgba(0, 0, 0, 0.8)&quot;,&#10;                lineHeight: &quot;1.2&quot;,&#10;              }}&#10;            &gt;&#10;              Images from around the world&#10;            &lt;/p&gt;&#10;            &lt;p&#10;              style={{&#10;                fontSize: &quot;32px&quot;,&#10;                color: &quot;rgba(255, 255, 255, 0.9)&quot;,&#10;                margin: &quot;16px 0 0 0&quot;,&#10;                fontWeight: &quot;400&quot;,&#10;                textShadow: &quot;2px 2px 4px rgba(0, 0, 0, 0.8)&quot;,&#10;              }}&#10;            &gt;&#10;              Explore the beauty of our planet &#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      ),&#10;      {&#10;        width: 1200,&#10;        height: 630,&#10;      }&#10;    );&#10;  } catch (e: any) {&#10;    console.log(`${e.message}`);&#10;    return new Response(`Failed to generate the image`, {&#10;      status: 500,&#10;    });&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/globals.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/globals.css" />
              <option name="originalContent" value="@import &quot;tailwindcss&quot;;&#10;@import &quot;tw-animate-css&quot;;&#10;&#10;@plugin &quot;tailwindcss-motion&quot;;&#10;&#10;@custom-variant dark (&amp;:is(.dark *));&#10;&#10;@theme inline {&#10;    --color-background: var(--background);&#10;    --color-foreground: var(--foreground);&#10;    --color-sidebar-ring: var(--sidebar-ring);&#10;    --color-sidebar-border: var(--sidebar-border);&#10;    --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);&#10;    --color-sidebar-accent: var(--sidebar-accent);&#10;    --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);&#10;    --color-sidebar-primary: var(--sidebar-primary);&#10;    --color-sidebar-foreground: var(--sidebar-foreground);&#10;    --color-ring: var(--ring);&#10;    --color-input: var(--input);&#10;    --color-border: var(--border);&#10;    --color-destructive: var(--destructive);&#10;    --color-accent-foreground: var(--accent-foreground);&#10;    --color-accent: var(--accent);&#10;    --color-muted-foreground: var(--muted-foreground);&#10;    --color-muted: var(--muted);&#10;    --color-secondary-foreground: var(--secondary-foreground);&#10;    --color-secondary: var(--secondary);&#10;    --color-primary-foreground: var(--primary-foreground);&#10;    --color-primary: var(--primary);&#10;    --color-popover-foreground: var(--popover-foreground);&#10;    --color-popover: var(--popover);&#10;    --color-card-foreground: var(--card-foreground);&#10;    --color-card: var(--card);&#10;    --radius-sm: calc(var(--radius) - 4px);&#10;    --radius-md: calc(var(--radius) - 2px);&#10;    --radius-lg: var(--radius);&#10;    --radius-xl: calc(var(--radius) + 4px);&#10;&#10;    --color-gallery-bg: hsl(var(--gallery-bg));&#10;    --color-gallery-text: hsl(var(--gallery-text));&#10;    --color-gallery-muted: hsl(var(--gallery-muted));&#10;    --color-glass-bg: hsl(var(--glass-bg));&#10;    --color-glass-border: hsl(var(--glass-border));&#10;    --color-button-glass: hsl(var(--button-glass));&#10;    --color-button-glass-hover: hsl(var(--button-glass-hover));&#10;}&#10;&#10;    }&#10;}&#10;&#10;/* Touch device optimizations */&#10;@media (hover: none) and (pointer: coarse) {&#10;    .hover\:scale-105:hover {&#10;        transform: none;&#10;    }&#10;&#10;    .hover\:scale-\[1\.02\]:hover {&#10;        transform: none;&#10;    }&#10;&#10;    .group:hover .group-hover\:scale-105 {&#10;        transform: none;&#10;    }&#10;&#10;    .group:hover .group-hover\:scale-110 {&#10;        transform: none;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="@import &quot;tailwindcss&quot;;&#10;@import &quot;tw-animate-css&quot;;&#10;&#10;@plugin &quot;tailwindcss-motion&quot;;&#10;&#10;@custom-variant dark (&amp;:is(.dark *));&#10;&#10;@theme inline {&#10;    --color-background: var(--background);&#10;    --color-foreground: var(--foreground);&#10;    --color-sidebar-ring: var(--sidebar-ring);&#10;    --color-sidebar-border: var(--sidebar-border);&#10;    --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);&#10;    --color-sidebar-accent: var(--sidebar-accent);&#10;    --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);&#10;    --color-sidebar-primary: var(--sidebar-primary);&#10;    --color-sidebar-foreground: var(--sidebar-foreground);&#10;    --color-ring: var(--ring);&#10;    --color-input: var(--input);&#10;    --color-border: var(--border);&#10;    --color-destructive: var(--destructive);&#10;    --color-accent-foreground: var(--accent-foreground);&#10;    --color-accent: var(--accent);&#10;    --color-muted-foreground: var(--muted-foreground);&#10;    --color-muted: var(--muted);&#10;    --color-secondary-foreground: var(--secondary-foreground);&#10;    --color-secondary: var(--secondary);&#10;    --color-primary-foreground: var(--primary-foreground);&#10;    --color-primary: var(--primary);&#10;    --color-popover-foreground: var(--popover-foreground);&#10;    --color-popover: var(--popover);&#10;    --color-card-foreground: var(--card-foreground);&#10;    --color-card: var(--card);&#10;    --radius-sm: calc(var(--radius) - 4px);&#10;    --radius-md: calc(var(--radius) - 2px);&#10;    --radius-lg: var(--radius);&#10;    --radius-xl: calc(var(--radius) + 4px);&#10;&#10;    --color-gallery-bg: hsl(var(--gallery-bg));&#10;    --color-gallery-text: hsl(var(--gallery-text));&#10;    --color-gallery-muted: hsl(var(--gallery-muted));&#10;    --color-glass-bg: hsl(var(--glass-bg));&#10;    --color-glass-border: hsl(var(--glass-border));&#10;    --color-button-glass: hsl(var(--button-glass));&#10;    --color-button-glass-hover: hsl(var(--button-glass-hover));&#10;}&#10;&#10;/* Hide scrollbars for carousel */&#10;.scrollbar-hide {&#10;  -ms-overflow-style: none;  /* Internet Explorer 10+ */&#10;  scrollbar-width: none;  /* Firefox */&#10;}&#10;&#10;.scrollbar-hide::-webkit-scrollbar { &#10;  display: none;  /* Safari and Chrome */&#10;}&#10;&#10;/* Smooth scroll behavior for carousel */&#10;.snap-x {&#10;  scroll-snap-type: x mandatory;&#10;}&#10;&#10;.snap-center {&#10;  scroll-snap-align: center;&#10;}&#10;&#10;.snap-mandatory {&#10;  scroll-snap-type: x mandatory;&#10;}&#10;&#10;/* Ensure smooth scrolling */&#10;html {&#10;  scroll-behavior: smooth;&#10;}&#10;&#10;/* Custom scrollbar for indicators if needed */&#10;.custom-scrollbar::-webkit-scrollbar {&#10;  height: 4px;&#10;}&#10;&#10;.custom-scrollbar::-webkit-scrollbar-track {&#10;  background: rgba(255, 255, 255, 0.1);&#10;  border-radius: 2px;&#10;}&#10;&#10;.custom-scrollbar::-webkit-scrollbar-thumb {&#10;  background: rgba(255, 255, 255, 0.3);&#10;  border-radius: 2px;&#10;}&#10;&#10;.custom-scrollbar::-webkit-scrollbar-thumb:hover {&#10;  background: rgba(255, 255, 255, 0.5);&#10;}&#10;&#10;:root {&#10;    --radius: 0.625rem;&#10;    --background: 0 0% 100%;&#10;    --foreground: 222.2 84% 4.9%;&#10;&#10;    --card: 0 0% 100%;&#10;    --card-foreground: 222.2 84% 4.9%;&#10;&#10;    --popover: 0 0% 100%;&#10;    --popover-foreground: 222.2 84% 4.9%;&#10;&#10;    --primary: 222.2 47.4% 11.2%;&#10;    --primary-foreground: 210 40% 98%;&#10;&#10;    --secondary: 210 40% 96.1%;&#10;    --secondary-foreground: 222.2 47.4% 11.2%;&#10;&#10;    --muted: 210 40% 96.1%;&#10;    --muted-foreground: 215.4 16.3% 46.9%;&#10;&#10;    --accent: 210 40% 96.1%;&#10;    --accent-foreground: 222.2 47.4% 11.2%;&#10;&#10;    --destructive: 0 84.2% 60.2%;&#10;    --destructive-foreground: 210 40% 98%;&#10;&#10;    --border: 214.3 31.8% 91.4%;&#10;    --input: 214.3 31.8% 91.4%;&#10;    --ring: 222.2 84% 4.9%;&#10;&#10;    /* Gallery-specific design tokens */&#10;    --gallery-bg: 0 0% 5%;&#10;    --gallery-text: 0 0% 95%;&#10;    --gallery-muted: 0 0% 60%;&#10;    --glass-bg: 0 0% 100% / 0.1;&#10;    --glass-border: 0 0% 100% / 0.2;&#10;    --button-glass: 0 0% 100% / 0.15;&#10;    --button-glass-hover: 0 0% 100% / 0.25;&#10;&#10;    /* Shadows */&#10;    --shadow-soft: 0 4px 24px -4px hsl(0 0% 0% / 0.1);&#10;    --shadow-glass: 0 8px 32px -8px hsl(0 0% 0% / 0.3);&#10;    --shadow-intense: 0 20px 50px -12px hsl(0 0% 0% / 0.4);&#10;&#10;    /* Transitions */&#10;    --transition-smooth: all 0.3s cubic-bezier(0.23, 1, 0.320, 1);&#10;    --transition-spring: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);&#10;&#10;    --sidebar-background: 0 0% 98%;&#10;    --sidebar-foreground: 240 5.3% 26.1%;&#10;    --sidebar-primary: 240 5.9% 10%;&#10;    --sidebar-primary-foreground: 0 0% 98%;&#10;    --sidebar-accent: 240 4.8% 95.9%;&#10;    --sidebar-accent-foreground: 240 5.9% 10%;&#10;    --sidebar-border: 220 13% 91%;&#10;    --sidebar-ring: 217.2 91.2% 59.8%;&#10;}&#10;&#10;.dark {&#10;    --background: 222.2 84% 4.9%;&#10;    --foreground: 210 40% 98%;&#10;    --card: 222.2 84% 4.9%;&#10;    --card-foreground: 210 40% 98%;&#10;    --popover: 222.2 84% 4.9%;&#10;    --popover-foreground: 210 40% 98%;&#10;    --primary: 210 40% 98%;&#10;    --primary-foreground: 222.2 47.4% 11.2%;&#10;    --secondary: 217.2 32.6% 17.5%;&#10;    --secondary-foreground: 210 40% 98%;&#10;    --muted: 217.2 32.6% 17.5%;&#10;    --muted-foreground: 215 20.2% 65.1%;&#10;    --accent: 217.2 32.6% 17.5%;&#10;    --accent-foreground: 210 40% 98%;&#10;    --destructive: 0 62.8% 30.6%;&#10;    --destructive-foreground: 210 40% 98%;&#10;    --border: 217.2 32.6% 17.5%;&#10;    --input: 217.2 32.6% 17.5%;&#10;    --ring: 212.7 26.8% 83.9%;&#10;    --sidebar-background: 240 5.9% 10%;&#10;    --sidebar-foreground: 240 4.8% 95.9%;&#10;    --sidebar-primary: 224.3 76.3% 48%;&#10;    --sidebar-primary-foreground: 0 0% 100%;&#10;    --sidebar-accent: 240 3.7% 15.9%;&#10;    --sidebar-accent-foreground: 240 4.8% 95.9%;&#10;    --sidebar-border: 240 3.7% 15.9%;&#10;    --sidebar-ring: 217.2 91.2% 59.8%;&#10;}&#10;&#10;@layer base {&#10;    * {&#10;        @apply border-border outline-ring/50;&#10;    }&#10;&#10;    body {&#10;        @apply bg-background text-foreground;&#10;    }&#10;}&#10;&#10;/* Performance optimizations */&#10;@layer utilities {&#10;    .transform-gpu {&#10;        transform: translate3d(0, 0, 0);&#10;    }&#10;&#10;    .will-change-transform {&#10;        will-change: transform;&#10;    }&#10;&#10;    .will-change-opacity {&#10;        will-change: opacity;&#10;    }&#10;&#10;    .contain-layout {&#10;        contain: layout;&#10;    }&#10;&#10;    .contain-paint {&#10;        contain: paint;&#10;    }&#10;&#10;    .contain-style {&#10;        contain: style;&#10;    }&#10;&#10;    .contain-strict {&#10;        contain: strict;&#10;    }&#10;}&#10;&#10;/* Optimize animations for better performance */&#10;@layer components {&#10;    .animate-fade-in {&#10;        animation: fade-in 0.4s cubic-bezier(0.23, 1, 0.320, 1);&#10;    }&#10;&#10;    .animate-scale-in {&#10;        animation: scale-in 0.2s cubic-bezier(0.23, 1, 0.320, 1);&#10;    }&#10;&#10;    .animate-slide-in-right {&#10;        animation: slide-in-right 0.3s cubic-bezier(0.23, 1, 0.320, 1);&#10;    }&#10;}&#10;&#10;/* Touch device optimizations */&#10;@media (hover: none) and (pointer: coarse) {&#10;    .hover\:scale-105:hover {&#10;        transform: none;&#10;    }&#10;&#10;    .hover\:scale-\[1\.02\]:hover {&#10;        transform: none;&#10;    }&#10;&#10;    .group:hover .group-hover\:scale-105 {&#10;        transform: none;&#10;    }&#10;&#10;    .group:hover .group-hover\:scale-110 {&#10;        transform: none;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/app/layout.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/layout.tsx" />
              <option name="originalContent" value="import type { Metadata } from &quot;next&quot;;&#10;import { Geist, Geist_Mono } from &quot;next/font/google&quot;;&#10;import &quot;./globals.css&quot;;&#10;&#10;const geistSans = Geist({&#10;  variable: &quot;--font-geist-sans&quot;,&#10;  subsets: [&quot;latin&quot;],&#10;});&#10;&#10;const geistMono = Geist_Mono({&#10;  variable: &quot;--font-geist-mono&quot;,&#10;  subsets: [&quot;latin&quot;],&#10;});&#10;&#10;export const metadata: Metadata = {&#10;  title: &quot;the beauty of earth.&quot;,&#10;  description:&#10;    &quot;Images from around the world. Explore the beauty of our planet &quot;,&#10;  openGraph: {&#10;    title: &quot;the beauty of earth.&quot;,&#10;    description:&#10;      &quot;Images from around the world. Explore the beauty of our planet &quot;,&#10;    url: &quot;https://images.jomaendle.com&quot;,&#10;  },&#10;  twitter: {&#10;    title: &quot;the beauty of earth.&quot;,&#10;    description:&#10;      &quot;Images from around the world. Explore the beauty of our planet &quot;,&#10;    card: &quot;summary_large_image&quot;,&#10;    creator: &quot;@jomaendle&quot;,&#10;  },&#10;};&#10;&#10;export default function RootLayout({&#10;  children,&#10;}: Readonly&lt;{&#10;  children: React.ReactNode;&#10;}&gt;) {&#10;  return (&#10;    &lt;html lang=&quot;en&quot;&gt;&#10;      &lt;body&#10;        className={`${geistSans.variable} ${geistMono.variable} antialiased`}&#10;      &gt;&#10;        {children}&#10;        &lt;footer&gt;&#10;          &lt;div className=&quot;text-center fixed text-sm text-gray-300 bottom-8 left-8 z-20 mt-8&quot;&gt;&#10;            © {new Date().getFullYear()} Jo Mändle&#10;          &lt;/div&gt;&#10;        &lt;/footer&gt;&#10;      &lt;/body&gt;&#10;    &lt;/html&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="import type { Metadata } from &quot;next&quot;;&#10;import { Geist, Geist_Mono } from &quot;next/font/google&quot;;&#10;import &quot;./globals.css&quot;;&#10;&#10;const geistSans = Geist({&#10;  variable: &quot;--font-geist-sans&quot;,&#10;  subsets: [&quot;latin&quot;],&#10;});&#10;&#10;const geistMono = Geist_Mono({&#10;  variable: &quot;--font-geist-mono&quot;,&#10;  subsets: [&quot;latin&quot;],&#10;});&#10;&#10;export const metadata: Metadata = {&#10;  title: &quot;the beauty of earth.&quot;,&#10;  description:&#10;    &quot;Images from around the world. Explore the beauty of our planet &quot;,&#10;  openGraph: {&#10;    title: &quot;the beauty of earth.&quot;,&#10;    description:&#10;      &quot;Images from around the world. Explore the beauty of our planet &quot;,&#10;    url: &quot;https://images.jomaendle.com&quot;,&#10;    images: [&#10;      {&#10;        url: &quot;/api/og?title=the%20beauty%20of%20earth.&quot;,&#10;        width: 1200,&#10;        height: 630,&#10;        alt: &quot;the beauty of earth. - Images from around the world&quot;,&#10;      },&#10;    ],&#10;    type: &quot;website&quot;,&#10;  },&#10;  twitter: {&#10;    title: &quot;the beauty of earth.&quot;,&#10;    description:&#10;      &quot;Images from around the world. Explore the beauty of our planet &quot;,&#10;    card: &quot;summary_large_image&quot;,&#10;    creator: &quot;@jomaendle&quot;,&#10;    images: [&quot;/api/og?title=the%20beauty%20of%20earth.&quot;],&#10;  },&#10;};&#10;&#10;export default function RootLayout({&#10;  children,&#10;}: Readonly&lt;{&#10;  children: React.ReactNode;&#10;}&gt;) {&#10;  return (&#10;    &lt;html lang=&quot;en&quot;&gt;&#10;      &lt;body&#10;        className={`${geistSans.variable} ${geistMono.variable} antialiased`}&#10;      &gt;&#10;        {children}&#10;        &lt;footer&gt;&#10;          &lt;div className=&quot;text-center fixed text-sm text-gray-300 bottom-8 left-8 z-20 mt-8&quot;&gt;&#10;            © {new Date().getFullYear()} Jo Mändle&#10;          &lt;/div&gt;&#10;        &lt;/footer&gt;&#10;      &lt;/body&gt;&#10;    &lt;/html&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/gallery/carousel/CarouselNavigation.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/gallery/carousel/CarouselNavigation.tsx" />
              <option name="updatedContent" value="import { ChevronLeft, ChevronRight } from &quot;lucide-react&quot;;&#10;&#10;interface CarouselNavigationProps {&#10;  onNext: () =&gt; void;&#10;  onPrevious: () =&gt; void;&#10;  canGoNext: boolean;&#10;  canGoPrevious: boolean;&#10;}&#10;&#10;export function CarouselNavigation({&#10;  onNext,&#10;  onPrevious,&#10;  canGoNext,&#10;  canGoPrevious,&#10;}: CarouselNavigationProps) {&#10;  return (&#10;    &lt;&gt;&#10;      {/* Previous button */}&#10;      &lt;button&#10;        onClick={onPrevious}&#10;        disabled={!canGoPrevious}&#10;        className={`absolute left-6 top-1/2 -translate-y-1/2 z-10 p-4 rounded-full bg-black/30 backdrop-blur-xl border border-white/15 transition-all duration-300 ease-out shadow-lg ${&#10;          canGoPrevious&#10;            ? &quot;hover:bg-black/50 hover:scale-105 hover:shadow-xl active:scale-95 opacity-100&quot;&#10;            : &quot;opacity-40 cursor-not-allowed&quot;&#10;        }`}&#10;        aria-label=&quot;Previous image&quot;&#10;      &gt;&#10;        &lt;ChevronLeft className=&quot;w-6 h-6 text-white&quot; strokeWidth={2.5} /&gt;&#10;      &lt;/button&gt;&#10;&#10;      {/* Next button */}&#10;      &lt;button&#10;        onClick={onNext}&#10;        disabled={!canGoNext}&#10;        className={`absolute right-6 top-1/2 -translate-y-1/2 z-10 p-4 rounded-full bg-black/30 backdrop-blur-xl border border-white/15 transition-all duration-300 ease-out shadow-lg ${&#10;          canGoNext&#10;            ? &quot;hover:bg-black/50 hover:scale-105 hover:shadow-xl active:scale-95 opacity-100&quot;&#10;            : &quot;opacity-40 cursor-not-allowed&quot;&#10;        }`}&#10;        aria-label=&quot;Next image&quot;&#10;      &gt;&#10;        &lt;ChevronRight className=&quot;w-6 h-6 text-white&quot; strokeWidth={2.5} /&gt;&#10;      &lt;/button&gt;&#10;    &lt;/&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>